// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.10
// source: proto/dungeonsandtrolls.proto

package dungeonsandtrolls

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Element int32

const (
	Element_COLD      Element = 0
	Element_FIRE      Element = 1
	Element_LIGHTNING Element = 2
	Element_POISON    Element = 3
)

// Enum value maps for Element.
var (
	Element_name = map[int32]string{
		0: "COLD",
		1: "FIRE",
		2: "LIGHTNING",
		3: "POISON",
	}
	Element_value = map[string]int32{
		"COLD":      0,
		"FIRE":      1,
		"LIGHTNING": 2,
		"POISON":    3,
	}
)

func (x Element) Enum() *Element {
	p := new(Element)
	*p = x
	return p
}

func (x Element) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Element) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_dungeonsandtrolls_proto_enumTypes[0].Descriptor()
}

func (Element) Type() protoreflect.EnumType {
	return &file_proto_dungeonsandtrolls_proto_enumTypes[0]
}

func (x Element) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Element.Descriptor instead.
func (Element) EnumDescriptor() ([]byte, []int) {
	return file_proto_dungeonsandtrolls_proto_rawDescGZIP(), []int{0}
}

type Attribute int32

const (
	Attribute_STRENGTH     Attribute = 0
	Attribute_INTELLIGENCE Attribute = 1
	Attribute_VITALITY     Attribute = 2
	Attribute_DEXTERITY    Attribute = 3
)

// Enum value maps for Attribute.
var (
	Attribute_name = map[int32]string{
		0: "STRENGTH",
		1: "INTELLIGENCE",
		2: "VITALITY",
		3: "DEXTERITY",
	}
	Attribute_value = map[string]int32{
		"STRENGTH":     0,
		"INTELLIGENCE": 1,
		"VITALITY":     2,
		"DEXTERITY":    3,
	}
)

func (x Attribute) Enum() *Attribute {
	p := new(Attribute)
	*p = x
	return p
}

func (x Attribute) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Attribute) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_dungeonsandtrolls_proto_enumTypes[1].Descriptor()
}

func (Attribute) Type() protoreflect.EnumType {
	return &file_proto_dungeonsandtrolls_proto_enumTypes[1]
}

func (x Attribute) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Attribute.Descriptor instead.
func (Attribute) EnumDescriptor() ([]byte, []int) {
	return file_proto_dungeonsandtrolls_proto_rawDescGZIP(), []int{1}
}

type Weapon_Type int32

const (
	Weapon_DAGGER Weapon_Type = 0
	Weapon_SWORD  Weapon_Type = 1
	Weapon_WAND   Weapon_Type = 2
	Weapon_AXE    Weapon_Type = 3
	Weapon_MACE   Weapon_Type = 4
	Weapon_CLAW   Weapon_Type = 5
	Weapon_STAFF  Weapon_Type = 6
	Weapon_SPEAR  Weapon_Type = 7
)

// Enum value maps for Weapon_Type.
var (
	Weapon_Type_name = map[int32]string{
		0: "DAGGER",
		1: "SWORD",
		2: "WAND",
		3: "AXE",
		4: "MACE",
		5: "CLAW",
		6: "STAFF",
		7: "SPEAR",
	}
	Weapon_Type_value = map[string]int32{
		"DAGGER": 0,
		"SWORD":  1,
		"WAND":   2,
		"AXE":    3,
		"MACE":   4,
		"CLAW":   5,
		"STAFF":  6,
		"SPEAR":  7,
	}
)

func (x Weapon_Type) Enum() *Weapon_Type {
	p := new(Weapon_Type)
	*p = x
	return p
}

func (x Weapon_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Weapon_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_dungeonsandtrolls_proto_enumTypes[2].Descriptor()
}

func (Weapon_Type) Type() protoreflect.EnumType {
	return &file_proto_dungeonsandtrolls_proto_enumTypes[2]
}

func (x Weapon_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Weapon_Type.Descriptor instead.
func (Weapon_Type) EnumDescriptor() ([]byte, []int) {
	return file_proto_dungeonsandtrolls_proto_rawDescGZIP(), []int{6, 0}
}

type Armor_Type int32

const (
	Armor_SHIELD     Armor_Type = 0
	Armor_HELMET     Armor_Type = 1
	Armor_BODY_ARMOR Armor_Type = 2
	Armor_TROUSERS   Armor_Type = 3
	Armor_BELT       Armor_Type = 4
	Armor_BOOTS      Armor_Type = 5
	Armor_GLOVES     Armor_Type = 6
)

// Enum value maps for Armor_Type.
var (
	Armor_Type_name = map[int32]string{
		0: "SHIELD",
		1: "HELMET",
		2: "BODY_ARMOR",
		3: "TROUSERS",
		4: "BELT",
		5: "BOOTS",
		6: "GLOVES",
	}
	Armor_Type_value = map[string]int32{
		"SHIELD":     0,
		"HELMET":     1,
		"BODY_ARMOR": 2,
		"TROUSERS":   3,
		"BELT":       4,
		"BOOTS":      5,
		"GLOVES":     6,
	}
)

func (x Armor_Type) Enum() *Armor_Type {
	p := new(Armor_Type)
	*p = x
	return p
}

func (x Armor_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Armor_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_dungeonsandtrolls_proto_enumTypes[3].Descriptor()
}

func (Armor_Type) Type() protoreflect.EnumType {
	return &file_proto_dungeonsandtrolls_proto_enumTypes[3]
}

func (x Armor_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Armor_Type.Descriptor instead.
func (Armor_Type) EnumDescriptor() ([]byte, []int) {
	return file_proto_dungeonsandtrolls_proto_rawDescGZIP(), []int{7, 0}
}

type DamageOverTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Element  Element `protobuf:"varint,1,opt,name=element,proto3,enum=dungeonsandtrolls.Element" json:"element,omitempty"`
	Damage   float32 `protobuf:"fixed32,2,opt,name=damage,proto3" json:"damage,omitempty"`
	Duration int32   `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *DamageOverTime) Reset() {
	*x = DamageOverTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dungeonsandtrolls_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DamageOverTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DamageOverTime) ProtoMessage() {}

func (x *DamageOverTime) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dungeonsandtrolls_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DamageOverTime.ProtoReflect.Descriptor instead.
func (*DamageOverTime) Descriptor() ([]byte, []int) {
	return file_proto_dungeonsandtrolls_proto_rawDescGZIP(), []int{0}
}

func (x *DamageOverTime) GetElement() Element {
	if x != nil {
		return x.Element
	}
	return Element_COLD
}

func (x *DamageOverTime) GetDamage() float32 {
	if x != nil {
		return x.Damage
	}
	return 0
}

func (x *DamageOverTime) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

type AttributeValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attribute Attribute `protobuf:"varint,1,opt,name=attribute,proto3,enum=dungeonsandtrolls.Attribute" json:"attribute,omitempty"`
	Value     float32   `protobuf:"fixed32,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *AttributeValue) Reset() {
	*x = AttributeValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dungeonsandtrolls_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttributeValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttributeValue) ProtoMessage() {}

func (x *AttributeValue) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dungeonsandtrolls_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttributeValue.ProtoReflect.Descriptor instead.
func (*AttributeValue) Descriptor() ([]byte, []int) {
	return file_proto_dungeonsandtrolls_proto_rawDescGZIP(), []int{1}
}

func (x *AttributeValue) GetAttribute() Attribute {
	if x != nil {
		return x.Attribute
	}
	return Attribute_STRENGTH
}

func (x *AttributeValue) GetValue() float32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Resistance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Element Element `protobuf:"varint,1,opt,name=element,proto3,enum=dungeonsandtrolls.Element" json:"element,omitempty"`
	Value   float32 `protobuf:"fixed32,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Resistance) Reset() {
	*x = Resistance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dungeonsandtrolls_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resistance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resistance) ProtoMessage() {}

func (x *Resistance) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dungeonsandtrolls_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resistance.ProtoReflect.Descriptor instead.
func (*Resistance) Descriptor() ([]byte, []int) {
	return file_proto_dungeonsandtrolls_proto_rawDescGZIP(), []int{2}
}

func (x *Resistance) GetElement() Element {
	if x != nil {
		return x.Element
	}
	return Element_COLD
}

func (x *Resistance) GetValue() float32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Monster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Health      float32           `protobuf:"fixed32,2,opt,name=health,proto3" json:"health,omitempty"`
	Level       int32             `protobuf:"varint,3,opt,name=level,proto3" json:"level,omitempty"`
	Attributes  []*AttributeValue `protobuf:"bytes,4,rep,name=attributes,proto3" json:"attributes,omitempty"`
	Resistances []*Resistance     `protobuf:"bytes,5,rep,name=resistances,proto3" json:"resistances,omitempty"`
	Inventory   []*Items          `protobuf:"bytes,6,rep,name=inventory,proto3" json:"inventory,omitempty"`
}

func (x *Monster) Reset() {
	*x = Monster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dungeonsandtrolls_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Monster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Monster) ProtoMessage() {}

func (x *Monster) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dungeonsandtrolls_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Monster.ProtoReflect.Descriptor instead.
func (*Monster) Descriptor() ([]byte, []int) {
	return file_proto_dungeonsandtrolls_proto_rawDescGZIP(), []int{3}
}

func (x *Monster) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Monster) GetHealth() float32 {
	if x != nil {
		return x.Health
	}
	return 0
}

func (x *Monster) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Monster) GetAttributes() []*AttributeValue {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *Monster) GetResistances() []*Resistance {
	if x != nil {
		return x.Resistances
	}
	return nil
}

func (x *Monster) GetInventory() []*Items {
	if x != nil {
		return x.Inventory
	}
	return nil
}

type Player struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Health      float32           `protobuf:"fixed32,2,opt,name=health,proto3" json:"health,omitempty"`
	Level       int32             `protobuf:"varint,3,opt,name=level,proto3" json:"level,omitempty"`
	Attributes  []*AttributeValue `protobuf:"bytes,4,rep,name=attributes,proto3" json:"attributes,omitempty"`
	Resistances []*Resistance     `protobuf:"bytes,5,rep,name=resistances,proto3" json:"resistances,omitempty"`
	Inventory   []*Items          `protobuf:"bytes,6,rep,name=inventory,proto3" json:"inventory,omitempty"`
	Xp          int32             `protobuf:"varint,7,opt,name=xp,proto3" json:"xp,omitempty"`
	Money       int32             `protobuf:"varint,8,opt,name=money,proto3" json:"money,omitempty"`
}

func (x *Player) Reset() {
	*x = Player{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dungeonsandtrolls_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dungeonsandtrolls_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_proto_dungeonsandtrolls_proto_rawDescGZIP(), []int{4}
}

func (x *Player) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Player) GetHealth() float32 {
	if x != nil {
		return x.Health
	}
	return 0
}

func (x *Player) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Player) GetAttributes() []*AttributeValue {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *Player) GetResistances() []*Resistance {
	if x != nil {
		return x.Resistances
	}
	return nil
}

func (x *Player) GetInventory() []*Items {
	if x != nil {
		return x.Inventory
	}
	return nil
}

func (x *Player) GetXp() int32 {
	if x != nil {
		return x.Xp
	}
	return 0
}

func (x *Player) GetMoney() int32 {
	if x != nil {
		return x.Money
	}
	return 0
}

type Boost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attribute Attribute `protobuf:"varint,1,opt,name=attribute,proto3,enum=dungeonsandtrolls.Attribute" json:"attribute,omitempty"`
	Value     float32   `protobuf:"fixed32,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Boost) Reset() {
	*x = Boost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dungeonsandtrolls_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Boost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Boost) ProtoMessage() {}

func (x *Boost) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dungeonsandtrolls_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Boost.ProtoReflect.Descriptor instead.
func (*Boost) Descriptor() ([]byte, []int) {
	return file_proto_dungeonsandtrolls_proto_rawDescGZIP(), []int{5}
}

func (x *Boost) GetAttribute() Attribute {
	if x != nil {
		return x.Attribute
	}
	return Attribute_STRENGTH
}

func (x *Boost) GetValue() float32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Weapon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	OneHand        bool              `protobuf:"varint,2,opt,name=one_hand,json=oneHand,proto3" json:"one_hand,omitempty"`
	Type           Weapon_Type       `protobuf:"varint,3,opt,name=type,proto3,enum=dungeonsandtrolls.Weapon_Type" json:"type,omitempty"`
	MinDamage      float32           `protobuf:"fixed32,4,opt,name=min_damage,json=minDamage,proto3" json:"min_damage,omitempty"`
	MaxDamage      float32           `protobuf:"fixed32,5,opt,name=max_damage,json=maxDamage,proto3" json:"max_damage,omitempty"`
	Weight         float32           `protobuf:"fixed32,6,opt,name=weight,proto3" json:"weight,omitempty"`
	Price          float32           `protobuf:"fixed32,7,opt,name=price,proto3" json:"price,omitempty"`
	DamageOverTime []*DamageOverTime `protobuf:"bytes,8,rep,name=damage_over_time,json=damageOverTime,proto3" json:"damage_over_time,omitempty"`
	Requirements   []*AttributeValue `protobuf:"bytes,9,rep,name=requirements,proto3" json:"requirements,omitempty"`
	Boosts         []*AttributeValue `protobuf:"bytes,10,rep,name=boosts,proto3" json:"boosts,omitempty"`
	Resistances    []*Resistance     `protobuf:"bytes,11,rep,name=resistances,proto3" json:"resistances,omitempty"`
}

func (x *Weapon) Reset() {
	*x = Weapon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dungeonsandtrolls_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Weapon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Weapon) ProtoMessage() {}

func (x *Weapon) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dungeonsandtrolls_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Weapon.ProtoReflect.Descriptor instead.
func (*Weapon) Descriptor() ([]byte, []int) {
	return file_proto_dungeonsandtrolls_proto_rawDescGZIP(), []int{6}
}

func (x *Weapon) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Weapon) GetOneHand() bool {
	if x != nil {
		return x.OneHand
	}
	return false
}

func (x *Weapon) GetType() Weapon_Type {
	if x != nil {
		return x.Type
	}
	return Weapon_DAGGER
}

func (x *Weapon) GetMinDamage() float32 {
	if x != nil {
		return x.MinDamage
	}
	return 0
}

func (x *Weapon) GetMaxDamage() float32 {
	if x != nil {
		return x.MaxDamage
	}
	return 0
}

func (x *Weapon) GetWeight() float32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *Weapon) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Weapon) GetDamageOverTime() []*DamageOverTime {
	if x != nil {
		return x.DamageOverTime
	}
	return nil
}

func (x *Weapon) GetRequirements() []*AttributeValue {
	if x != nil {
		return x.Requirements
	}
	return nil
}

func (x *Weapon) GetBoosts() []*AttributeValue {
	if x != nil {
		return x.Boosts
	}
	return nil
}

func (x *Weapon) GetResistances() []*Resistance {
	if x != nil {
		return x.Resistances
	}
	return nil
}

type Armor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type         Armor_Type        `protobuf:"varint,2,opt,name=type,proto3,enum=dungeonsandtrolls.Armor_Type" json:"type,omitempty"`
	Price        float32           `protobuf:"fixed32,3,opt,name=price,proto3" json:"price,omitempty"`
	Weight       float32           `protobuf:"fixed32,4,opt,name=weight,proto3" json:"weight,omitempty"`
	Defense      float32           `protobuf:"fixed32,5,opt,name=defense,proto3" json:"defense,omitempty"`
	Requirements []*AttributeValue `protobuf:"bytes,6,rep,name=requirements,proto3" json:"requirements,omitempty"`
	Boosts       []*AttributeValue `protobuf:"bytes,7,rep,name=boosts,proto3" json:"boosts,omitempty"`
	Resistances  []*Resistance     `protobuf:"bytes,8,rep,name=resistances,proto3" json:"resistances,omitempty"`
}

func (x *Armor) Reset() {
	*x = Armor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dungeonsandtrolls_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Armor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Armor) ProtoMessage() {}

func (x *Armor) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dungeonsandtrolls_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Armor.ProtoReflect.Descriptor instead.
func (*Armor) Descriptor() ([]byte, []int) {
	return file_proto_dungeonsandtrolls_proto_rawDescGZIP(), []int{7}
}

func (x *Armor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Armor) GetType() Armor_Type {
	if x != nil {
		return x.Type
	}
	return Armor_SHIELD
}

func (x *Armor) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Armor) GetWeight() float32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *Armor) GetDefense() float32 {
	if x != nil {
		return x.Defense
	}
	return 0
}

func (x *Armor) GetRequirements() []*AttributeValue {
	if x != nil {
		return x.Requirements
	}
	return nil
}

func (x *Armor) GetBoosts() []*AttributeValue {
	if x != nil {
		return x.Boosts
	}
	return nil
}

func (x *Armor) GetResistances() []*Resistance {
	if x != nil {
		return x.Resistances
	}
	return nil
}

type Items struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Weapons []*Weapon `protobuf:"bytes,1,rep,name=weapons,proto3" json:"weapons,omitempty"`
	Armors  []*Armor  `protobuf:"bytes,2,rep,name=armors,proto3" json:"armors,omitempty"`
}

func (x *Items) Reset() {
	*x = Items{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dungeonsandtrolls_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Items) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Items) ProtoMessage() {}

func (x *Items) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dungeonsandtrolls_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Items.ProtoReflect.Descriptor instead.
func (*Items) Descriptor() ([]byte, []int) {
	return file_proto_dungeonsandtrolls_proto_rawDescGZIP(), []int{8}
}

func (x *Items) GetWeapons() []*Weapon {
	if x != nil {
		return x.Weapons
	}
	return nil
}

func (x *Items) GetArmors() []*Armor {
	if x != nil {
		return x.Armors
	}
	return nil
}

type Object struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	PositionX int32  `protobuf:"varint,2,opt,name=position_x,json=positionX,proto3" json:"position_x,omitempty"`
	PositionY int32  `protobuf:"varint,3,opt,name=position_y,json=positionY,proto3" json:"position_y,omitempty"`
}

func (x *Object) Reset() {
	*x = Object{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dungeonsandtrolls_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Object) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Object) ProtoMessage() {}

func (x *Object) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dungeonsandtrolls_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Object.ProtoReflect.Descriptor instead.
func (*Object) Descriptor() ([]byte, []int) {
	return file_proto_dungeonsandtrolls_proto_rawDescGZIP(), []int{9}
}

func (x *Object) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Object) GetPositionX() int32 {
	if x != nil {
		return x.PositionX
	}
	return 0
}

func (x *Object) GetPositionY() int32 {
	if x != nil {
		return x.PositionY
	}
	return 0
}

type MapDecorations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Carpets []*Object `protobuf:"bytes,1,rep,name=carpets,proto3" json:"carpets,omitempty"`
}

func (x *MapDecorations) Reset() {
	*x = MapDecorations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dungeonsandtrolls_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapDecorations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapDecorations) ProtoMessage() {}

func (x *MapDecorations) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dungeonsandtrolls_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapDecorations.ProtoReflect.Descriptor instead.
func (*MapDecorations) Descriptor() ([]byte, []int) {
	return file_proto_dungeonsandtrolls_proto_rawDescGZIP(), []int{10}
}

func (x *MapDecorations) GetCarpets() []*Object {
	if x != nil {
		return x.Carpets
	}
	return nil
}

type MapObjects struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Monsters []*Monster `protobuf:"bytes,1,rep,name=monsters,proto3" json:"monsters,omitempty"`
	Players  []*Player  `protobuf:"bytes,2,rep,name=players,proto3" json:"players,omitempty"`
	Chests   []*Object  `protobuf:"bytes,3,rep,name=chests,proto3" json:"chests,omitempty"`
	Stairs   []*Object  `protobuf:"bytes,4,rep,name=stairs,proto3" json:"stairs,omitempty"`
}

func (x *MapObjects) Reset() {
	*x = MapObjects{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dungeonsandtrolls_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapObjects) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapObjects) ProtoMessage() {}

func (x *MapObjects) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dungeonsandtrolls_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapObjects.ProtoReflect.Descriptor instead.
func (*MapObjects) Descriptor() ([]byte, []int) {
	return file_proto_dungeonsandtrolls_proto_rawDescGZIP(), []int{11}
}

func (x *MapObjects) GetMonsters() []*Monster {
	if x != nil {
		return x.Monsters
	}
	return nil
}

func (x *MapObjects) GetPlayers() []*Player {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *MapObjects) GetChests() []*Object {
	if x != nil {
		return x.Chests
	}
	return nil
}

func (x *MapObjects) GetStairs() []*Object {
	if x != nil {
		return x.Stairs
	}
	return nil
}

type Map struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Free    []*structpb.ListValue `protobuf:"bytes,1,rep,name=free,proto3" json:"free,omitempty"`
	Objects *MapObjects           `protobuf:"bytes,2,opt,name=objects,proto3" json:"objects,omitempty"`
}

func (x *Map) Reset() {
	*x = Map{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dungeonsandtrolls_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Map) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Map) ProtoMessage() {}

func (x *Map) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dungeonsandtrolls_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Map.ProtoReflect.Descriptor instead.
func (*Map) Descriptor() ([]byte, []int) {
	return file_proto_dungeonsandtrolls_proto_rawDescGZIP(), []int{12}
}

func (x *Map) GetFree() []*structpb.ListValue {
	if x != nil {
		return x.Free
	}
	return nil
}

func (x *Map) GetObjects() *MapObjects {
	if x != nil {
		return x.Objects
	}
	return nil
}

type GameState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Map       *Map    `protobuf:"bytes,1,opt,name=map,proto3" json:"map,omitempty"`
	Items     *Items  `protobuf:"bytes,2,opt,name=items,proto3" json:"items,omitempty"`
	Character *Player `protobuf:"bytes,3,opt,name=character,proto3,oneof" json:"character,omitempty"`
}

func (x *GameState) Reset() {
	*x = GameState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dungeonsandtrolls_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameState) ProtoMessage() {}

func (x *GameState) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dungeonsandtrolls_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameState.ProtoReflect.Descriptor instead.
func (*GameState) Descriptor() ([]byte, []int) {
	return file_proto_dungeonsandtrolls_proto_rawDescGZIP(), []int{13}
}

func (x *GameState) GetMap() *Map {
	if x != nil {
		return x.Map
	}
	return nil
}

func (x *GameState) GetItems() *Items {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *GameState) GetCharacter() *Player {
	if x != nil {
		return x.Character
	}
	return nil
}

var File_proto_dungeonsandtrolls_proto protoreflect.FileDescriptor

var file_proto_dungeonsandtrolls_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x73,
	0x61, 0x6e, 0x64, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x11, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x73, 0x61, 0x6e, 0x64, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x73, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7a, 0x0a,
	0x0e, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x34, 0x0a, 0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1a, 0x2e, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x73, 0x61, 0x6e, 0x64, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x73, 0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x62, 0x0a, 0x0e, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3a, 0x0a, 0x09, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c,
	0x2e, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x73, 0x61, 0x6e, 0x64, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x73, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x09, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x58, 0x0a,
	0x0a, 0x52, 0x65, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x64,
	0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x73, 0x61, 0x6e, 0x64, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x73,
	0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x87, 0x02, 0x0a, 0x07, 0x4d, 0x6f, 0x6e, 0x73,
	0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x41, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x75, 0x6e, 0x67,
	0x65, 0x6f, 0x6e, 0x73, 0x61, 0x6e, 0x64, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x73, 0x2e, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x73, 0x61, 0x6e, 0x64, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x73, 0x2e, 0x52, 0x65, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x0b, 0x72, 0x65,
	0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x09, 0x69, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64,
	0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x73, 0x61, 0x6e, 0x64, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x73,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x22, 0xac, 0x02, 0x0a, 0x06, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x41,
	0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x73, 0x61, 0x6e, 0x64,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x73, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x12, 0x3f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e,
	0x73, 0x61, 0x6e, 0x64, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x12, 0x36, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x73,
	0x61, 0x6e, 0x64, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52,
	0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x78, 0x70,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x78, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f,
	0x6e, 0x65, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x65, 0x79,
	0x22, 0x59, 0x0a, 0x05, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x09, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x64,
	0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x73, 0x61, 0x6e, 0x64, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x73,
	0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x09, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xc3, 0x04, 0x0a, 0x06,
	0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x6e,
	0x65, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6f, 0x6e,
	0x65, 0x48, 0x61, 0x6e, 0x64, 0x12, 0x32, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x73, 0x61, 0x6e,
	0x64, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x73, 0x2e, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x69, 0x6e,
	0x5f, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6d,
	0x69, 0x6e, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f,
	0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6d, 0x61,
	0x78, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x4b, 0x0a, 0x10, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x5f,
	0x6f, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x73, 0x61, 0x6e, 0x64, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x73, 0x2e, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x54, 0x69,
	0x6d, 0x65, 0x52, 0x0e, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x45, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x75, 0x6e, 0x67, 0x65,
	0x6f, 0x6e, 0x73, 0x61, 0x6e, 0x64, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x73, 0x2e, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x39, 0x0a, 0x06, 0x62, 0x6f, 0x6f,
	0x73, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x75, 0x6e, 0x67,
	0x65, 0x6f, 0x6e, 0x73, 0x61, 0x6e, 0x64, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x73, 0x2e, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x62, 0x6f,
	0x6f, 0x73, 0x74, 0x73, 0x12, 0x3f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x75, 0x6e, 0x67,
	0x65, 0x6f, 0x6e, 0x73, 0x61, 0x6e, 0x64, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x73, 0x2e, 0x52, 0x65,
	0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x5a, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a,
	0x06, 0x44, 0x41, 0x47, 0x47, 0x45, 0x52, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x57, 0x4f,
	0x52, 0x44, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x57, 0x41, 0x4e, 0x44, 0x10, 0x02, 0x12, 0x07,
	0x0a, 0x03, 0x41, 0x58, 0x45, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x4d, 0x41, 0x43, 0x45, 0x10,
	0x04, 0x12, 0x08, 0x0a, 0x04, 0x43, 0x4c, 0x41, 0x57, 0x10, 0x05, 0x12, 0x09, 0x0a, 0x05, 0x53,
	0x54, 0x41, 0x46, 0x46, 0x10, 0x06, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x50, 0x45, 0x41, 0x52, 0x10,
	0x07, 0x22, 0xb8, 0x03, 0x0a, 0x05, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x31, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e,
	0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x73, 0x61, 0x6e, 0x64, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x73, 0x2e, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x07, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0c, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x73, 0x61, 0x6e, 0x64, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x73, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x39, 0x0a, 0x06, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x73, 0x61, 0x6e, 0x64, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x73, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x3f, 0x0a, 0x0b,
	0x72, 0x65, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x73, 0x61, 0x6e, 0x64, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x0b, 0x72, 0x65, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x5d, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x48, 0x49, 0x45, 0x4c, 0x44, 0x10,
	0x00, 0x12, 0x0a, 0x0a, 0x06, 0x48, 0x45, 0x4c, 0x4d, 0x45, 0x54, 0x10, 0x01, 0x12, 0x0e, 0x0a,
	0x0a, 0x42, 0x4f, 0x44, 0x59, 0x5f, 0x41, 0x52, 0x4d, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x0c, 0x0a,
	0x08, 0x54, 0x52, 0x4f, 0x55, 0x53, 0x45, 0x52, 0x53, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x42,
	0x45, 0x4c, 0x54, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x4f, 0x4f, 0x54, 0x53, 0x10, 0x05,
	0x12, 0x0a, 0x0a, 0x06, 0x47, 0x4c, 0x4f, 0x56, 0x45, 0x53, 0x10, 0x06, 0x22, 0x6e, 0x0a, 0x05,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x33, 0x0a, 0x07, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e,
	0x73, 0x61, 0x6e, 0x64, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x73, 0x2e, 0x57, 0x65, 0x61, 0x70, 0x6f,
	0x6e, 0x52, 0x07, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x73, 0x12, 0x30, 0x0a, 0x06, 0x61, 0x72,
	0x6d, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x75, 0x6e,
	0x67, 0x65, 0x6f, 0x6e, 0x73, 0x61, 0x6e, 0x64, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x73, 0x2e, 0x41,
	0x72, 0x6d, 0x6f, 0x72, 0x52, 0x06, 0x61, 0x72, 0x6d, 0x6f, 0x72, 0x73, 0x22, 0x5a, 0x0a, 0x06,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x58, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x22, 0x45, 0x0a, 0x0e, 0x4d, 0x61, 0x70, 0x44,
	0x65, 0x63, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x33, 0x0a, 0x07, 0x63, 0x61,
	0x72, 0x70, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x64, 0x75,
	0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x73, 0x61, 0x6e, 0x64, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x73, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x63, 0x61, 0x72, 0x70, 0x65, 0x74, 0x73, 0x22,
	0xdf, 0x01, 0x0a, 0x0a, 0x4d, 0x61, 0x70, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x36,
	0x0a, 0x08, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x73, 0x61, 0x6e, 0x64, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x73, 0x2e, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x52, 0x08, 0x6d, 0x6f,
	0x6e, 0x73, 0x74, 0x65, 0x72, 0x73, 0x12, 0x33, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f,
	0x6e, 0x73, 0x61, 0x6e, 0x64, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x73, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x31, 0x0a, 0x06, 0x63,
	0x68, 0x65, 0x73, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x64, 0x75,
	0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x73, 0x61, 0x6e, 0x64, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x73, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x06, 0x63, 0x68, 0x65, 0x73, 0x74, 0x73, 0x12, 0x31,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x69, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x73, 0x61, 0x6e, 0x64, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x73, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x06, 0x73, 0x74, 0x61, 0x69, 0x72,
	0x73, 0x22, 0x6e, 0x0a, 0x03, 0x4d, 0x61, 0x70, 0x12, 0x2e, 0x0a, 0x04, 0x66, 0x72, 0x65, 0x65,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x04, 0x66, 0x72, 0x65, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x75, 0x6e, 0x67,
	0x65, 0x6f, 0x6e, 0x73, 0x61, 0x6e, 0x64, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x73, 0x2e, 0x4d, 0x61,
	0x70, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x22, 0xb1, 0x01, 0x0a, 0x09, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x28, 0x0a, 0x03, 0x6d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64,
	0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x73, 0x61, 0x6e, 0x64, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x73,
	0x2e, 0x4d, 0x61, 0x70, 0x52, 0x03, 0x6d, 0x61, 0x70, 0x12, 0x2e, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x75, 0x6e, 0x67, 0x65,
	0x6f, 0x6e, 0x73, 0x61, 0x6e, 0x64, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x73, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x3c, 0x0a, 0x09, 0x63, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x64,
	0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x73, 0x61, 0x6e, 0x64, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x73,
	0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x48, 0x00, 0x52, 0x09, 0x63, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x2a, 0x38, 0x0a, 0x07, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x08, 0x0a, 0x04, 0x43, 0x4f, 0x4c, 0x44, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x49,
	0x52, 0x45, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x4e, 0x49, 0x4e,
	0x47, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x4f, 0x49, 0x53, 0x4f, 0x4e, 0x10, 0x03, 0x2a,
	0x48, 0x0a, 0x09, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x0c, 0x0a, 0x08,
	0x53, 0x54, 0x52, 0x45, 0x4e, 0x47, 0x54, 0x48, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x4e,
	0x54, 0x45, 0x4c, 0x4c, 0x49, 0x47, 0x45, 0x4e, 0x43, 0x45, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08,
	0x56, 0x49, 0x54, 0x41, 0x4c, 0x49, 0x54, 0x59, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x45,
	0x58, 0x54, 0x45, 0x52, 0x49, 0x54, 0x59, 0x10, 0x03, 0x32, 0x53, 0x0a, 0x11, 0x44, 0x75, 0x6e,
	0x67, 0x65, 0x6f, 0x6e, 0x73, 0x41, 0x6e, 0x64, 0x54, 0x72, 0x6f, 0x6c, 0x6c, 0x73, 0x12, 0x3e,
	0x0a, 0x04, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1c,
	0x2e, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x73, 0x61, 0x6e, 0x64, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x73, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x00, 0x42, 0x44,
	0x5a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x64, 0x67,
	0x2d, 0x67, 0x61, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x73,
	0x2d, 0x61, 0x6e, 0x64, 0x2d, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x73, 0x2f, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2f, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x73, 0x61, 0x6e, 0x64, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_dungeonsandtrolls_proto_rawDescOnce sync.Once
	file_proto_dungeonsandtrolls_proto_rawDescData = file_proto_dungeonsandtrolls_proto_rawDesc
)

func file_proto_dungeonsandtrolls_proto_rawDescGZIP() []byte {
	file_proto_dungeonsandtrolls_proto_rawDescOnce.Do(func() {
		file_proto_dungeonsandtrolls_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_dungeonsandtrolls_proto_rawDescData)
	})
	return file_proto_dungeonsandtrolls_proto_rawDescData
}

var file_proto_dungeonsandtrolls_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_proto_dungeonsandtrolls_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_proto_dungeonsandtrolls_proto_goTypes = []interface{}{
	(Element)(0),               // 0: dungeonsandtrolls.Element
	(Attribute)(0),             // 1: dungeonsandtrolls.Attribute
	(Weapon_Type)(0),           // 2: dungeonsandtrolls.Weapon.Type
	(Armor_Type)(0),            // 3: dungeonsandtrolls.Armor.Type
	(*DamageOverTime)(nil),     // 4: dungeonsandtrolls.DamageOverTime
	(*AttributeValue)(nil),     // 5: dungeonsandtrolls.AttributeValue
	(*Resistance)(nil),         // 6: dungeonsandtrolls.Resistance
	(*Monster)(nil),            // 7: dungeonsandtrolls.Monster
	(*Player)(nil),             // 8: dungeonsandtrolls.Player
	(*Boost)(nil),              // 9: dungeonsandtrolls.Boost
	(*Weapon)(nil),             // 10: dungeonsandtrolls.Weapon
	(*Armor)(nil),              // 11: dungeonsandtrolls.Armor
	(*Items)(nil),              // 12: dungeonsandtrolls.Items
	(*Object)(nil),             // 13: dungeonsandtrolls.Object
	(*MapDecorations)(nil),     // 14: dungeonsandtrolls.MapDecorations
	(*MapObjects)(nil),         // 15: dungeonsandtrolls.MapObjects
	(*Map)(nil),                // 16: dungeonsandtrolls.Map
	(*GameState)(nil),          // 17: dungeonsandtrolls.GameState
	(*structpb.ListValue)(nil), // 18: google.protobuf.ListValue
	(*emptypb.Empty)(nil),      // 19: google.protobuf.Empty
}
var file_proto_dungeonsandtrolls_proto_depIdxs = []int32{
	0,  // 0: dungeonsandtrolls.DamageOverTime.element:type_name -> dungeonsandtrolls.Element
	1,  // 1: dungeonsandtrolls.AttributeValue.attribute:type_name -> dungeonsandtrolls.Attribute
	0,  // 2: dungeonsandtrolls.Resistance.element:type_name -> dungeonsandtrolls.Element
	5,  // 3: dungeonsandtrolls.Monster.attributes:type_name -> dungeonsandtrolls.AttributeValue
	6,  // 4: dungeonsandtrolls.Monster.resistances:type_name -> dungeonsandtrolls.Resistance
	12, // 5: dungeonsandtrolls.Monster.inventory:type_name -> dungeonsandtrolls.Items
	5,  // 6: dungeonsandtrolls.Player.attributes:type_name -> dungeonsandtrolls.AttributeValue
	6,  // 7: dungeonsandtrolls.Player.resistances:type_name -> dungeonsandtrolls.Resistance
	12, // 8: dungeonsandtrolls.Player.inventory:type_name -> dungeonsandtrolls.Items
	1,  // 9: dungeonsandtrolls.Boost.attribute:type_name -> dungeonsandtrolls.Attribute
	2,  // 10: dungeonsandtrolls.Weapon.type:type_name -> dungeonsandtrolls.Weapon.Type
	4,  // 11: dungeonsandtrolls.Weapon.damage_over_time:type_name -> dungeonsandtrolls.DamageOverTime
	5,  // 12: dungeonsandtrolls.Weapon.requirements:type_name -> dungeonsandtrolls.AttributeValue
	5,  // 13: dungeonsandtrolls.Weapon.boosts:type_name -> dungeonsandtrolls.AttributeValue
	6,  // 14: dungeonsandtrolls.Weapon.resistances:type_name -> dungeonsandtrolls.Resistance
	3,  // 15: dungeonsandtrolls.Armor.type:type_name -> dungeonsandtrolls.Armor.Type
	5,  // 16: dungeonsandtrolls.Armor.requirements:type_name -> dungeonsandtrolls.AttributeValue
	5,  // 17: dungeonsandtrolls.Armor.boosts:type_name -> dungeonsandtrolls.AttributeValue
	6,  // 18: dungeonsandtrolls.Armor.resistances:type_name -> dungeonsandtrolls.Resistance
	10, // 19: dungeonsandtrolls.Items.weapons:type_name -> dungeonsandtrolls.Weapon
	11, // 20: dungeonsandtrolls.Items.armors:type_name -> dungeonsandtrolls.Armor
	13, // 21: dungeonsandtrolls.MapDecorations.carpets:type_name -> dungeonsandtrolls.Object
	7,  // 22: dungeonsandtrolls.MapObjects.monsters:type_name -> dungeonsandtrolls.Monster
	8,  // 23: dungeonsandtrolls.MapObjects.players:type_name -> dungeonsandtrolls.Player
	13, // 24: dungeonsandtrolls.MapObjects.chests:type_name -> dungeonsandtrolls.Object
	13, // 25: dungeonsandtrolls.MapObjects.stairs:type_name -> dungeonsandtrolls.Object
	18, // 26: dungeonsandtrolls.Map.free:type_name -> google.protobuf.ListValue
	15, // 27: dungeonsandtrolls.Map.objects:type_name -> dungeonsandtrolls.MapObjects
	16, // 28: dungeonsandtrolls.GameState.map:type_name -> dungeonsandtrolls.Map
	12, // 29: dungeonsandtrolls.GameState.items:type_name -> dungeonsandtrolls.Items
	8,  // 30: dungeonsandtrolls.GameState.character:type_name -> dungeonsandtrolls.Player
	19, // 31: dungeonsandtrolls.DungeonsAndTrolls.Game:input_type -> google.protobuf.Empty
	17, // 32: dungeonsandtrolls.DungeonsAndTrolls.Game:output_type -> dungeonsandtrolls.GameState
	32, // [32:33] is the sub-list for method output_type
	31, // [31:32] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_proto_dungeonsandtrolls_proto_init() }
func file_proto_dungeonsandtrolls_proto_init() {
	if File_proto_dungeonsandtrolls_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_dungeonsandtrolls_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DamageOverTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dungeonsandtrolls_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttributeValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dungeonsandtrolls_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resistance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dungeonsandtrolls_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Monster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dungeonsandtrolls_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Player); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dungeonsandtrolls_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Boost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dungeonsandtrolls_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Weapon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dungeonsandtrolls_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Armor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dungeonsandtrolls_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Items); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dungeonsandtrolls_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Object); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dungeonsandtrolls_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapDecorations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dungeonsandtrolls_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapObjects); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dungeonsandtrolls_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Map); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dungeonsandtrolls_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_dungeonsandtrolls_proto_msgTypes[13].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_dungeonsandtrolls_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_dungeonsandtrolls_proto_goTypes,
		DependencyIndexes: file_proto_dungeonsandtrolls_proto_depIdxs,
		EnumInfos:         file_proto_dungeonsandtrolls_proto_enumTypes,
		MessageInfos:      file_proto_dungeonsandtrolls_proto_msgTypes,
	}.Build()
	File_proto_dungeonsandtrolls_proto = out.File
	file_proto_dungeonsandtrolls_proto_rawDesc = nil
	file_proto_dungeonsandtrolls_proto_goTypes = nil
	file_proto_dungeonsandtrolls_proto_depIdxs = nil
}
